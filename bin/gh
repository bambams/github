#!/bin/bash

domain="${GITHUB_DOMAIN:-github.com}";
path="${GITHUB_BASEPATH:-/}";
scheme="${GITHUB_SCHEME:-git://}";
user="${GITHUB_USERNAME:-$USER}";

cmd="$1";
shift;

case "$cmd" in
    ''|'-?'|-h|help)
        cat <<EOF 1>&2;
$(basename "$0") SUBCOMMAND [ ARG... ]

=SUBCOMMANDS=

  basepath

      Print the value of base path (See GITHUB_BASEPATH).

  clone [USER/]REPO [ DEST ]

      Clone the GitHub repository designated by USER/REPO into DEST.

      By default uses GITHUB_SCHEME. USER defaults to GITHUB_USERNAME.
      DEST defaults to the basename of REPO.

  domain

      Print the domain name (See GITHUB_DOMAIN).

  help

      Show this message.

  push-url

      Generate a GitHub URL for pushing. A push URL is typically of the
      form git@... or https://USER@... The generated URL is based on the
      scheme in use.

      (See also clone or remote for additional details)

  remote NAME [USER/]REPO

      Add remote repository with GitHub fetch and push URLs.

  scheme

      Print the URL scheme (See GITHUB_SCHEME).

  url [USER/]REPO

      Generate a GitHub URL.

      (See clone for details)

  user

      Print the GitHub username (See GITHUB_USERNAME).

=ENVIRONMENT=

  GITHUB_BASEPATH     The URL path prefix (i.e., before the user/repo).

  GITHUB_DOMAIN       The domain name of GitHub (default: github.com).

  GITHUB_SCHEME       The URL scheme to use (default: git://). Must include
                      colon and slashes.

  GITHUB_USERNAME     Your own GitHub username (default: USER).
EOF
        ;;
    basepath)
        echo "$path";
        ;;
    clone)
        repo="$1";
        dest="${2:-$(basename "$repo" .git)}";
        shift 2 || shift;

        url="$("$0" url "$repo" 2>/dev/null)";

        if [[ -z $dest || -z $url ]]; then
            "$0" help 1>&2;
            exit 1;
        fi;

        git "$cmd" "$@" "$url" "$dest";
        ;;
    domain)
        echo "$domain";
        ;;
    push-url)
        repo="$1";
        shift;

        if [[ $scheme = git:// ]]; then
            scheme=git@
        elif [[ $scheme =~ ^https?://$ ]]; then
            domain="${user}@${domain}";
        fi;

        GITHUB_SCHEME="$scheme" GITHUB_DOMAIN="$domain" \
                GITHUB_BASEPATH=':' "$0" url "$repo";
        ;;
    remote)
        name="${1:-origin}";
        repo="$2";

        if ! shift 2; then
            repo="$1";
            name=origin;
            shift;
        fi;

        url="$("$0" url "$repo" 2>/dev/null)";
        pushurl="$("$0" push-url "$repo" 2>/dev/null)";

        if [[ -z $pushurl || -z $url ]]; then
            "$0" help 1>&2;
            exit 1;
        fi;

        git "$cmd" add "$@" "$name" "$url" "$@" || exit $?;
        git "$cmd" set-url --push "$name" "$pushurl";
        ;;
    scheme)
        echo "$scheme";
        ;;
    url)
        repo="$1";
        shift;

        if [[ -z $repo ]]; then
            "$0" help 1>&2;
            exit 1;
        fi;

        if [[ $(dirname "$repo") = . ]]; then
            repo="$user/$repo";
        fi;

        if [[ ! $repo =~ \.git$ ]]; then
            repo="${repo}.git";
        fi;

        url="${scheme}${domain}${path}${repo}";

        echo "$url";
        ;;
    user)
        if [[ -z $user ]]; then
            echo 'The GitHub user could not be guessed.' 1>&2;
            exit 1;
        fi;

        echo "$user";
        ;;
    *)
        echo "Command '$cmd' is not supported." 1>&2;
        exit 1;
esac;
